name: Kernel CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 22 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    container: locietta/loia-dev-base:latest
    outputs:
      current_version: ${{ steps.out.outputs.current_version }}
      release_version: ${{ steps.out.outputs.release_version }}
    
    strategy: 
      matrix:
        include:
          - arch: GENERIC_CPU2
            image-name: bzImage-old
          - arch: GENERIC_CPU3
            image-name: bzImage
          - arch: MSKYLAKE
            image-name: bzImage-skylake

    steps:
    - uses: actions/checkout@v2
    
    - name: Install dependencies
      run: |
        pacman -S --noconfirm pahole xmlto inetutils bc cpio
    
    - name: Prepare source code
      run: |
        git clone https://github.com/xanmod/linux.git --depth 1 linux
        cd linux && ../config.sh
        scripts/config -e ${{ matrix.arch }}
        clang --version
        # Load version info into env
        echo "CURRENT_VERSION=$(make kernelrelease)" | tee -a $GITHUB_ENV
        echo "RELEASED_VERSION=$(curl --silent 'https://github.com/locietta/xanmod-kernel-WSL2/releases/latest' | sed 's#.*tag/\(.*\)\".*#\1#')" | tee -a $GITHUB_ENV

    - name: Build kernel
      if: ${{ env.CURRENT_VERSION != env.RELEASED_VERSION }}
      run: |
        cd linux && ../build.sh

    - name: Upload bzImage
      uses: actions/upload-artifact@v3
      if: ${{ env.CURRENT_VERSION != env.RELEASED_VERSION }}
      with:
        name: ${{ matrix.image-name }}
        path: linux/arch/x86/boot/bzImage

    - id: out
      run: |
        echo "::set-output name=current_version::${{ env.CURRENT_VERSION }}"
        echo "::set-output name=release_version::${{ env.RELEASED_VERSION }}"

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        path: release_images/
    - name: Release
      uses: softprops/action-gh-release@v1
      if: ${{ needs.build.outputs.current_version != needs.build.outputs.release_version }}
      with:
        name:  ${{ needs.build.outputs.current_version }}
        tag_name:  ${{ needs.build.outputs.current_version }}
        files: |
          release_images/*
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        generate_release_notes: true